name: E2E Verification

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lint:
    name: Lint Code
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  # JOB 2: The main job for testing and reporting. Only runs if linting passes.
  # In the `test-and-report` job
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        # We have REMOVED cache: 'npm' to take manual control

    # EXPLICIT CACHE STEP 1: Caching the global npm package cache
    - name: Cache npm dependencies
      uses: actions/cache@v4
      id: npm-cache
      with:
        # This path is where npm stores its cache, NOT your node_modules
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    # EXPLICIT CACHE STEP 2: Caching Playwright browsers
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      # Only install browsers if the cache was not restored
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npm test
      continue-on-error: true

    - name: Generate Allure Report
      run: npx allure generate allure-results --clean -o allure-report

    - name: Deploy Allure Report to GitHub Pages
      run: |
        cd allure-report
        # ... (rest of your deploy script)
        git push -f "https://${{ github.actor }}:${{ secrets.GH_PAGES_PAT }}@github.com/${{ github.repository }}.git" HEAD:gh-pages

    # The cleanup step is now redundant because our caches are explicit,
    # but it's good practice to keep it as a safeguard.
    - name: Clean up generated artifacts
      if: always()
      run: |
        rm -rf allure-report
        rm -rf test-results
        rm -rf playwright-report