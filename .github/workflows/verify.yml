name: E2E Verification

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lint:
    name: Lint Code
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  # JOB 2: The main job for testing and reporting. Only runs if linting passes.
  test-and-report:
    name: Run E2E Tests & Publish Report
    runs-on: self-hosted
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Cache Playwright browsers to speed up subsequent runs
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        # Only install browsers if the cache was not found
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm test
        continue-on-error: true

      - name: Generate Allure Report
        run: npx allure generate allure-results --clean -o allure-report

      - name: Deploy Allure Report to GitHub Pages
        run: |
          cd allure-report
          touch .nojekyll
          git init
          git add .
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Deploy Allure report for ${{ github.sha }}"
          git push -f "https://${{ github.actor }}:${{ secrets.GH_PAGES_PAT }}@github.com/${{ github.repository }}.git" HEAD:gh-pages